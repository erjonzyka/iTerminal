// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iTerminal.Models;

#nullable disable

namespace iTerminal.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240130180036_njenfdjnfdjn")]
    partial class njenfdjnfdjn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("iTerminal.Models.Association", b =>
                {
                    b.Property<int>("AssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("AssociationId");

                    b.HasIndex("RouteId");

                    b.HasIndex("UnitId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("iTerminal.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("iTerminal.Models.Linja", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PointA")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PointB")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("iTerminal.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TripId");

                    b.HasIndex("UnitId");

                    b.HasIndex("UserId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("iTerminal.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("longblob");

                    b.Property<string>("ImageFileName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Nisja")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UnitId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("RouteId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("iTerminal.Models.UserReg", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("iTerminal.Models.Association", b =>
                {
                    b.HasOne("iTerminal.Models.Linja", "route")
                        .WithMany("AllAssociations")
                        .HasForeignKey("RouteId");

                    b.HasOne("iTerminal.Models.Unit", "unit")
                        .WithMany("AllAssociations")
                        .HasForeignKey("UnitId");

                    b.Navigation("route");

                    b.Navigation("unit");
                });

            modelBuilder.Entity("iTerminal.Models.Trip", b =>
                {
                    b.HasOne("iTerminal.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.HasOne("iTerminal.Models.UserReg", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Unit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("iTerminal.Models.Unit", b =>
                {
                    b.HasOne("iTerminal.Models.Company", "Creator")
                        .WithMany("AllUnits")
                        .HasForeignKey("CreatorId");

                    b.HasOne("iTerminal.Models.Linja", "route")
                        .WithMany()
                        .HasForeignKey("RouteId");

                    b.Navigation("Creator");

                    b.Navigation("route");
                });

            modelBuilder.Entity("iTerminal.Models.Company", b =>
                {
                    b.Navigation("AllUnits");
                });

            modelBuilder.Entity("iTerminal.Models.Linja", b =>
                {
                    b.Navigation("AllAssociations");
                });

            modelBuilder.Entity("iTerminal.Models.Unit", b =>
                {
                    b.Navigation("AllAssociations");
                });
#pragma warning restore 612, 618
        }
    }
}
